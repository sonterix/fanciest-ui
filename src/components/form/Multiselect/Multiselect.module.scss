@import '../../../styles/helper.scss';

.MultiselectContainer {
  display: inline-block;

  .Label {
    display: block;
    margin-bottom: 5px;
    font-size: 16px;
    font-weight: 400;
    color: var(--color-black3);
    user-select: none;
  }

  .Multiselect {
    display: flex;
    flex-direction: column;
    justify-content: flex-start;
    align-items: flex-start;
    gap: 10px;
    position: relative;
    min-width: 110px;
    width: 100%;
    color: var(--color-black);
    background-color: transparent;
    border: 1px solid transparent;
    transition: color var(--trans), background-color var(--trans), border-color var(--trans);
    cursor: pointer;

    @mixin colorStylesLocal($color-primary, $color-secondary) {
      color: $color-primary;

      .MultiselectSelected > li {
        color: $color-secondary;
        background-color: $color-primary;

        > [data-active='true'] > svg {
          fill: $color-secondary;
        }
      }
    }

    &.Black {
      @include colorStylesLocal(var(--color-black2), var(--color-white));
    }

    &.White {
      @include colorStylesLocal(var(--color-white), var(--color-black));
    }

    &.Yellow {
      @include colorStylesLocal(var(--color-yellow), var(--color-white));
    }

    &.Orange {
      @include colorStylesLocal(var(--color-orange), var(--color-white));
    }

    &.Red {
      @include colorStylesLocal(var(--color-red), var(--color-white));
    }

    &.Rose {
      @include colorStylesLocal(var(--color-rose), var(--color-white));
    }

    &.Green {
      @include colorStylesLocal(var(--color-green), var(--color-white));
    }

    &.Teal {
      @include colorStylesLocal(var(--color-teal), var(--color-white));
    }

    &.Turquoise {
      @include colorStylesLocal(var(--color-turquoise), var(--color-white));
    }

    &.Blue {
      @include colorStylesLocal(var(--color-blue), var(--color-white));
    }

    &.Purple {
      @include colorStylesLocal(var(--color-purple), var(--color-white));
    }

    &.Md {
      padding: 12px 34px 12px 16px;
      font-size: 18px;

      .MultiselectSelected > li {
        font-size: 14px;
        border-radius: 10px;
      }

      > svg {
        top: 14px;
      }

      .MultiselectSearch,
      > span {
        font-size: 16px;
      }
    }

    &.Sm {
      padding: 10px 34px 10px 16px;
      font-size: 16px;

      .MultiselectSelected > li {
        font-size: 12px;
        border-radius: 8px;
      }

      > svg {
        top: 10px;
      }

      .MultiselectSearch,
      > span {
        font-size: 14px;
      }
    }

    &.Rounded {
      border-radius: 26px;
    }

    &.Squared {
      border-radius: 6px;
    }

    &.Filled {
      background-color: var(--color-white);
      border-color: var(--color-black8);

      &:hover,
      &:focus {
        border-color: var(--color-black5);
      }
    }

    &.Outlined {
      padding-left: 0;
      padding-right: 34px;
      border-width: 2px;
      border-bottom-color: var(--color-black8);
      border-radius: 0;

      &:hover,
      &:focus {
        border-bottom-color: var(--color-black5);
      }
    }

    &:disabled {
      color: var(--color-black4);
      background-color: var(--color-black9);
      pointer-events: none;
      cursor: default;

      .MultiselectResult {
        > svg {
          color: var(--color-black4);
        }
      }
    }

    > svg {
      position: absolute;
      right: 10px;
      padding: 5px;
      width: 18px;
      height: 18px;
      color: var(--color-black3);
      fill: currentColor;
      transition: transform var(--trans-fast);

      &.Up {
        transform: rotate(-90deg);
      }

      &.Down {
        transform: rotate(90deg);
      }
    }

    .MultiselectSelected {
      display: flex;
      justify-content: flex-start;
      align-items: flex-start;
      gap: 8px;
      padding: 0;
      list-style: none;

      > li {
        display: flex;
        justify-content: space-between;
        align-items: center;
        gap: 5px;
        padding: 3px 10px;

        > [data-active='true'] {
          padding: 3px;
          background-color: transparent;
          border: none;
          transition: opacity var(--trans);

          &:hover {
            opacity: 0.7;
          }

          > svg {
            width: 7px;
            height: 7px;
            flex-shrink: 0;
            pointer-events: none;
          }
        }
      }
    }

    .MultiselectSearch {
      width: inherit;
      padding: 0;
      border: none;
      background-color: transparent;
    }
  }
}

.MultiselectDropdown {
  position: absolute;
  transform: translate(-50%, 3px);
  padding: 0;
  max-height: 250px;
  list-style: none;
  background-color: var(--color-white);
  border: 1px solid var(--color-black8);
  border-radius: 4px;
  box-shadow: 0px 4px 16px rgba(0, 0, 0, 0.15);
  overflow-x: hidden;
  overflow-y: auto;
  z-index: 99100;

  @include colorStyles($with-color: true, $with-background-color: false);

  &.Md {
    font-size: 16px;

    > li.OptionsNotFound {
      font-size: 16px;
    }
  }

  &.Sm {
    font-size: 14px;

    > li.OptionsNotFound {
      font-size: 14px;
    }
  }

  > li.OptionsNotFound {
    padding: 10px 12px;
    font-weight: 500;
    text-align: center;
    color: var(--color-black4);
  }

  > li,
  > li > button {
    display: block;
    color: inherit;
    font-size: inherit;
    font-weight: inherit;
  }

  > li > button {
    padding: 10px 12px;
    width: 100%;
    text-align: left;
    background-color: transparent;
    border: none;
    user-select: none;
    cursor: pointer;

    &[data-active='true'] {
      font-weight: 600;
      background-color: var(--color-black9);
    }

    &:hover,
    &:focus {
      background-color: var(--color-black8);
    }

    &:disabled {
      color: var(--color-black8);
      background-color: var(--color-white9);
      cursor: default;
      pointer-events: none;
    }
  }
}
